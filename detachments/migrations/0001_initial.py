# Generated by Django 5.1.7 on 2025-05-13 23:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Detachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='实践名称')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(verbose_name='结束日期')),
                ('valid', models.BooleanField(default=True)),
                ('research_content', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('member_num', models.IntegerField(blank=True, default=0, null=True)),
                ('province', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DetachmentMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', '队员'), ('leader', '队长')], max_length=10)),
                ('detachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='detachments.detachment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'detachment')},
            },
        ),
        migrations.AddField(
            model_name='detachment',
            name='participant',
            field=models.ManyToManyField(related_name='_detachments', through='detachments.DetachmentMembership', to=settings.AUTH_USER_MODEL),
        ),
    ]
